[tox]
isolated_build = True
envlist = integration-tests


[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[testenv:integration-tests]
deps = 
    -r{toxinidir}/dev_requirements.txt
    pytest-cov

stoponfail = True

commands =
    black --check redisbench_admin
    flake8 redisbench_admin
    coverage erase
    pytest --cov=redisbench_admin --cov-report=term-missing -ra {posargs}
    coverage xml

docker =
    rts_datasink
    db_server
    client_server

[docker]
docker_host = unix:///var/run/docker.sock

[docker:rts_datasink]
image = redis/redis-stack-server:7.0.2-RC4
ports =
    16379:6379/tcp

[docker:db_server]
image = ghcr.io/linuxserver/openssh-server
ports =
    2222:2222/tcp
environment =
    PUBLIC_KEY_DIR=/test-ssh
    PUBLIC_KEY=tox_rsa.pub
    USER_NAME=ubuntu
volumes =
    bind:ro:{toxinidir}/tests/test_data/test-ssh/pub:/test-ssh

[docker:client_server]
image = ghcr.io/linuxserver/openssh-server
ports =
    222:2222/tcp
environment =
    PUBLIC_KEY_DIR=/test-ssh
    PUBLIC_KEY=tox_rsa.pub
    USER_NAME=ubuntu
volumes =
    bind:ro:{toxinidir}/tests/test_data/test-ssh/pub:/test-ssh
